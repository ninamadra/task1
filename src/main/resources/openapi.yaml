openapi: 3.0.3
info:
  title: Product API
  version: 1.0.0
  description: API for managing products

components:
  schemas:
    ProductReadDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        expirationDate:
          type: string
          format: date
        productTypeDTO:
          type: string
          enum: [FRUITS, VEGETABLES, OTHER]
        quantity:   # New property for ProductReadDTO
          type: integer
          nullable: true   # Quantity can be null in ProductReadDTO
      required:
        - name
        - productTypeDTO

    ProductWriteDTO:
      type: object
      properties:
        name:
          type: string
        expirationDate:
          type: string
          format: date
        productTypeDTO:
          type: string
          enum: [FRUITS, VEGETABLES, OTHER]
      required:
        - name
        - productTypeDTO

paths:
  /products:
    post:
      summary: Create a new product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductWriteDTO'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReadDTO'

    get:
      summary: Get all products
      operationId: getAllProducts
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductReadDTO'

  /products/{id}:
    get:
      summary: Get a product by ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReadDTO'

    delete:
      summary: Delete a product by ID
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content

    put:
      summary: Update a product by ID
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductWriteDTO'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReadDTO'
